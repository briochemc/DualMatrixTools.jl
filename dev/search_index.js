var documenterSearchIndex = {"docs":
[{"location":"#DualMatrixTools.jl-Documentation-1","page":"DualMatrixTools.jl Documentation","title":"DualMatrixTools.jl Documentation","text":"","category":"section"},{"location":"#","page":"DualMatrixTools.jl Documentation","title":"DualMatrixTools.jl Documentation","text":"This package provides an overloaded factorize and \\ that work with dual-valued matrices and vectors.","category":"page"},{"location":"#","page":"DualMatrixTools.jl Documentation","title":"DualMatrixTools.jl Documentation","text":"It is essentially based on the dual type defined by the DualNumbers.jl package.","category":"page"},{"location":"#Motivation-1","page":"DualMatrixTools.jl Documentation","title":"Motivation","text":"","category":"section"},{"location":"#","page":"DualMatrixTools.jl Documentation","title":"DualMatrixTools.jl Documentation","text":"The idea is that for a dual-valued matrix M = A + varepsilon B, its inverse is given by M^-1 = (I - varepsilon A^-1 B) A^-1. Therefore, only the inverse of A is required to evaluate the inverse of M. This package should be useful for evaluation of first derivatives of functions that use \\ (e.g., with iterative solvers).","category":"page"},{"location":"#How-it-works-1","page":"DualMatrixTools.jl Documentation","title":"How it works","text":"","category":"section"},{"location":"#","page":"DualMatrixTools.jl Documentation","title":"DualMatrixTools.jl Documentation","text":"DualMatrixTools.jl makes available a DualFactors type which contains the factors of A (i.e., the output of factorize, e.g., L and U, or Q and R) and the non-real part of M (i.e., B). DualMatrixTools.jl overloads factorize so that for a dual-valued matrix M, factorize(M) creates an instance of DualFactors. Finally, DualMatrixTools.jl also overloads \\ to efficiently solve dual-valued linear systems of the type M x = y by using the default \\ with the factors of A only.","category":"page"},{"location":"#Usage-1","page":"DualMatrixTools.jl Documentation","title":"Usage","text":"","category":"section"},{"location":"#","page":"DualMatrixTools.jl Documentation","title":"DualMatrixTools.jl Documentation","text":"Create your dual-valued matrix M:","category":"page"},{"location":"#","page":"DualMatrixTools.jl Documentation","title":"DualMatrixTools.jl Documentation","text":"DualMatrixTools\nn = 4\nA, B = rand(n, n), randn(n, n)\nM = A + ε * B","category":"page"},{"location":"#","page":"DualMatrixTools.jl Documentation","title":"DualMatrixTools.jl Documentation","text":"Factorize M:","category":"page"},{"location":"#","page":"DualMatrixTools.jl Documentation","title":"DualMatrixTools.jl Documentation","text":"Mf = factorize(M)","category":"page"},{"location":"#","page":"DualMatrixTools.jl Documentation","title":"DualMatrixTools.jl Documentation","text":"Apply \\ to solve systems of the type M * x = y","category":"page"},{"location":"#","page":"DualMatrixTools.jl Documentation","title":"DualMatrixTools.jl Documentation","text":"y = rand(n, 2) * [1.0, ε]\nx = Mf \\ y\nM * x ≈ y","category":"page"},{"location":"#Functions-1","page":"DualMatrixTools.jl Documentation","title":"Functions","text":"","category":"section"},{"location":"#","page":"DualMatrixTools.jl Documentation","title":"DualMatrixTools.jl Documentation","text":"factorize","category":"page"},{"location":"#LinearAlgebra.factorize","page":"DualMatrixTools.jl Documentation","title":"LinearAlgebra.factorize","text":"factorize(M::SparseMatrixCSC{<:Dual,<:Int})\n\nInvokes factorize on just the real part of M and stores it along with the dual part into a DualFactors object.\n\n\n\n\n\nfactorize(M::Array{<:Dual,2})\n\nInvokes factorize on just the real part of M and stores it along with the dual part into a DualFactors object.\n\n\n\n\n\n","category":"function"},{"location":"#","page":"DualMatrixTools.jl Documentation","title":"DualMatrixTools.jl Documentation","text":"\\","category":"page"},{"location":"#Base.:\\","page":"DualMatrixTools.jl Documentation","title":"Base.:\\","text":"\\(M::DualFactors, y::AbstractVecOrMat{Float64})\n\nBacksubstitution for DualFactors. See DualFactors for details.\n\n\n\n\n\n\\(M::DualFactors, y::AbstractVecOrMat{Dual128})\n\nBacksubstitution for DualFactors. See DualFactors for details.\n\n\n\n\n\n\\(Af::Factorization{Float64}, y::AbstractVecOrMat{Dual128})\n\nBacksubstitution for Dual-valued RHS.\n\n\n\n\n\n\\(M::AbstractArray{Dual128,2}, y::AbstractVecOrMat)\n\nBackslash (factorization and backsubstitution) for Dual-valued matrix M.\n\n\n\n\n\n","category":"function"},{"location":"#New-types-1","page":"DualMatrixTools.jl Documentation","title":"New types","text":"","category":"section"},{"location":"#","page":"DualMatrixTools.jl Documentation","title":"DualMatrixTools.jl Documentation","text":"DualFactors","category":"page"},{"location":"#DualMatrixTools.DualFactors","page":"DualMatrixTools.jl Documentation","title":"DualMatrixTools.DualFactors","text":"DualFactors\n\nContainer type to work efficiently with backslash on dual-valued sparse matrices.\n\nfactorize(M) will create an instance containing\n\nAf = factorize(realpart.(M)) — the factors of the real part\nB = dualpart.(M) — the dual part\n\nfor a dual-valued matrix M.\n\nThis is because only the factors of the real part are needed when solving a linear system of the type M x = b for a dual-valued matrix M = A + varepsilon B. In fact, the inverse of M is given by M^-1 = (I - varepsilon A^-1 B) A^-1.\n\n\n\n\n\n","category":"type"}]
}
